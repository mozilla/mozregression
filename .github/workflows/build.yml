name: Build and test

on:
  pull_request:
    branches:
        - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m venv env
          source env/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-3.9-Linux.txt
          python -m pip install -e .
      - name: Lint
        run: |
          source env/bin/activate
          ./bin/lint-check.sh || (echo "Lint fix results:" && ./bin/lint-fix.sh && git diff && false)

  build-and-test-linux-base:
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: setup
        run: |
          sudo apt-get update
          sudo apt-get install libegl-dev -y
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m venv env
          source env/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-${{ matrix.python-version }}-${{ runner.os }}.txt
          python -m pip install -e .
      - name: Test
        run: |
          source env/bin/activate
          coverage run -m pytest tests
          coveralls --service=github

  build-and-test-windows-cli:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies and run tests
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-3.11-Windows.txt
          python -m pip install -e .
          python -m pytest tests

  build-and-test-linux-gui:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
    env:
      DISPLAY: ":99.0"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TAG: ${{ github.event.release.tag_name }}
    steps:
      - uses: actions/checkout@v3
      - name: setup
        run: |
          sudo apt-get update
          sudo apt install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libegl-dev -y
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m venv env
          source env/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-3.9-Linux.txt
          python -m pip install -e .
      - name: Build
        run: |
          source env/bin/activate
          python gui/build.py bundle
          ls -alh gui/mozregression-gui.tar.gz
      - name: Test
        run: |
          source env/bin/activate
          coverage run -m pytest -v gui/tests
          coveralls --service=github

  build-and-test-mac-gui:
    runs-on: macos-latest
    env:
      # We need the official Python, because the GA ones only support newer macOS versions
      # The deployment target is picked up by the Python build tools automatically
      PYTHON_VERSION: 3.11.1
      MACOSX_DEPLOYMENT_TARGET: 10.13
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Get Python
        run: curl https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}-macos11.pkg -o "python.pkg"
      - name: Install Python
        # See: https://github.com/actions/virtual-environments/issues/1256#issuecomment-770270252
        run: |
          sudo installer -pkg python.pkg -target /
          python3 -m venv env
          source env/bin/activate
          which python
          python --version
      - name: Install dependencies
        run: |
          source env/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-3.11-macOS.txt
          python -m pip install -e .
      - name: Build
        run: |
          source env/bin/activate
          python gui/build.py bundle
          ls -alh gui/mozregression-gui-app-bundle.tar.gz
      - name: Test
        run: |
          source env/bin/activate
          coverage run -m pytest -v gui/tests
          coveralls --service=github
  build-and-test-windows-gui:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-3.10-Windows.txt
          python -m pip install -e .
      - name: Build and test
        run: |
          python gui\build.py bundle --nsis-path "C:\\Program Files (x86)\\NSIS"
          python gui\build.py test
